// Here is how to solve Lower Bound-STL without using pointers

#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;


int main() {
    /* Enter your code here. Read input from STDIN. Print output to STDOUT */  
    int n;
    int q;
    vector<int> v;
    
    // Enter size of vector
    cin >> n;
    
    // Make vector
    for(int m=0;m<n;m++)
    {
        // n sorted integers
        cin >> q;
        v.push_back(q);
    }
    
    // num queries
    cin >> q;

    
    // make query vector
    vector<int> queries;
    for (int loop = 0; loop < q; loop++)
    {
        int num;
        cin >> num;
        queries.push_back(num);
    }

    // Loop through query vector
    for(int i=0;i < q; i++)
    {    
        int match = -1;

         // Loop through vector
        for (int j=0; j < n; j++)
        {
            // Found match
            if (queries[i] == v[j])
            {
                cout << "Yes" << " " << j+1 << endl;
                match = j;
                // It matches so you should increase starting pointer
                break;
            }
        }
        
        // Truth statement for second search
        if (match == -1)
        {
        // Loop through vector
        for (int k = 0; k < n; k++)
        {
            // Second search condition
            if(v[k] > queries[i])
            {
                cout << "No" << " " << k+1 << endl;
                break;
            }
        }
        }
    }

    return 0;
}
